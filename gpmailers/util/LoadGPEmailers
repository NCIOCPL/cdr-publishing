#!/usr/bin/python

#----------------------------------------------------------------------
#
# Import GeneticsProfessional emailer information and notify the GP
# that he/she needs to review the information.
#
# BZIssue::4630
# JIRA::OCECDR-4092 - replace hard-coded tester list with group address
#
#----------------------------------------------------------------------
import cdrutil, bz2, sys, lxml.etree as etree

LOGFILE = '/weblogs/gpmailers/gpmailers.log'
SENDER = 'GeneticsDirectory@cancer.gov'
emailBody = """\
<p>Dear Member of the NCI Cancer Genetics Services Directory:</p>

<p>We contact you annually to update your listing in the National Cancer
Institute's (NCI) Cancer Genetics Services Directory.  Please take a
moment to update your information on your personalized Directory Update
Web page.  Before you get started, please note:</p>

<ul>
 <li>This page will be available for 120 days.  If you are not able
     to complete the update in that time, please email
     <a href='mailto:GeneticsDirectory@cancer.gov'
     >GeneticsDirectory@cancer.gov</a>.</li>
 <li>If you have problems with the link or using the online update system,
     please send an email to
     <a href='mailto:GeneticsDirectory@cancer.gov'
     >GeneticsDirectory@cancer.gov</a>.</li>
</ul>

<p>To begin your update, click on the link below or copy and paste the link
into your browser.

<p><a href='%s'>%s</a></p>

<p>Thank you for helping us keep the NCI Cancer Genetics Services Directory
current.</p>

<p>Coordinator<br />
NCI Cancer Genetics Services Directory<br />
GeneticsDirectory@cancer.gov</p>
"""
testers = ("CancerGovTest@mail.nih.gov",)

# -------------------------------------------------------------------
# Pull emailers from job packages in dropbox, load them into the
# gp_emailer table, and notify the genetics professional that they
# need to review their directory information.
# -------------------------------------------------------------------
def loadEmailers():
    conn = cdrutil.getConnection()
    cursor = conn.cursor()
    cursor.execute("""\
        SELECT id, emailers
          FROM dropbox.gp_emailer_job
         WHERE imported IS NULL""")
    rows = cursor.fetchall()
    for jobId, compressedDoc in rows:
        root = etree.XML(bz2.decompress(compressedDoc))
        ops = [o.strip() for o in root.get("Ops", "").split(",")]
        for child in root.findall('GP'):
            try:
                loadEmailer(conn, cursor, jobId, child, ops)
            except Exception, e:
                msg = (u"failure loading mailer for CDR%s in job %s: %s" %
                       (child.get('id'), jobId, e)).encode('utf-8')
                cdrutil.log(msg, logfile=LOGFILE)
                sys.stderr.write("%s\n" % msg)
        cursor.execute("""\
            UPDATE dropbox.gp_emailer_job
               SET imported = NOW()
             WHERE id = %s""", jobId)
        conn.commit()
        msg = "loaded mailers for job %d" % jobId
        cdrutil.log(msg, logfile=LOGFILE)
        print msg

# -------------------------------------------------------------------
#
# -------------------------------------------------------------------
def loadEmailer(conn, cursor, jobId, node, ops):
    trackerId = node.get('tracker')
    docId = node.get('id')
    name = email = u''
    for child in node.findall('FullName'):
        name = child.text
    for child in node.findall('Contact/Email'):
        email = child.text
    if not email:
        msg = ("   no email address for sending emailer %s (CDR%s)" %
               (trackerId, docId))
        cdrutil.log(msg, logfile=LOGFILE)
        sys.stderr.write("%s\n" % msg)
    doc = etree.tostring(node)
    cursor.execute("""\
        INSERT INTO emailers.gp_emailer (id, cdr_id, job, email, name, xml,
                                         original, mailed)
             VALUES (%s, %s, %s, %s, %s, %s, %s, NOW())""",
                   (trackerId, docId, jobId, email, name, doc, doc))
    conn.commit()
    print "   loaded emailer %s (CDR%s)" % (trackerId, docId)
    try:
        subject = 'NCI Cancer Genetics Services Directory update request'
        if cdrutil.isProductionHost():
            address = [email]
        else:
            address = testers
        emailerId = cdrutil.base36((int(trackerId) << 32) + int(docId))
        if cdrutil.getEnvironment() == 'OCE':
            url = "http://%s%s/cgsd.py?id=%s" % (cdrutil.WEB_HOST,
                                                 cdrutil.CGI_BASE,
                                                 emailerId)
        else:
            h = cdrutil.AppHost(cdrutil.getEnvironment(), cdrutil.getTier())
            url = "https://%s.%s/cgi-bin/cgsd.py?id=%s" % (
                                                   h.host['EMAILERSC'][0],
                                                   h.host['EMAILERSC'][1],
                                                   emailerId)
        message = cdrutil.sendMail(SENDER, address, subject,
                                   emailBody % (url, url), html=True)
    except Exception, e:
        error = ("Failure emailing %s for batch %s: %s" %
                 (address, emailerId, e))
        cdrutil.log(error, logfile=LOGFILE)
        try:
            if ops:
                subject += " *** FAILURE ***"
                cdrutil.sendMail(SENDER, ops, subject, error)
        except:
            pass

# -------------------------------------------------------------------
# Main starts here
# -------------------------------------------------------------------
cdrutil.log('*** LoadGPEmailers - Started ***', logfile=LOGFILE)
try:
    loadEmailers()
except Exception, e:
    print "LoadGPEmailers failure: %s" % e
    cdrutil.log("***Error: LoadGPEmailers failure: %s" % e, logfile=LOGFILE)

cdrutil.log('*** LoadGPEmailers - Finished ***\n', logfile=LOGFILE)
